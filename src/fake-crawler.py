from flask import Flask, request
import requests
import json

app = Flask(__name__)


@app.route('/')
def hello_world():
    return 'Hello, World!'


# TODO: temporary until all set client and crawler
@app.route('/crawl', methods=['GET'])
def crawl():
    request_body = request.get_json()
    url = 'http://0.0.0.0:10443/source-codes'
    # data = {
    #     "requestID": request_body.get('requestID'),
    #     'searchResult': [
    #         {
    #             'documentation': 'reading a file',
    #             'url': 'https://url.com',
    #             'sourceCode': [
    #                 '''tup1 = ('physics', 'chemistry', 1997, 2000)''',
    #                 '''import json\n''',
    #                 '''import json\n\n\n\n\n\n\n\n\n\n\n\n\n''',
    #                 '''x, y = 'a', 2 ''',
    #                 '''import json\nfrom uuid import uuid4\n# you may also want''',
    #                 '''with open(fname) as f:\n    content = f.readlines()\n# you may also want to remove whitespace characters like `\\n` at the end of each line\ncontent = [x.strip() for x in content] \nprint(2)\n'''
    #             ],
    #         },
    #         {
    #             'documentation': 'When you’re working with Python, you don’t need to import a library in order to read and write files. It’s handled natively in the language, albeit in a unique manner.',
    #             'url': 'http://www.pythonforbeginners.com/files/reading-and-writing-files-in-python',
    #             'sourceCode': [
    #                 '''file_object = open(“filename”, “mode”) where\nfile_object is the variable to add the file object.''',
    #                 '''file = open("testfile.txt","w")\nfile.write("Hello World")\nfile.close()''',
    #             ],
    #         },
    #     ],
    # }
    # data = {'query': 'read file', 'searchResult': [{'sourceCode': ['\r\n\r\nBOOL WINAPI ReadFile(\r\n  _In_&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;HANDLE &Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;hFile,\r\n  _Out_&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;LPVOID &Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;lpBuffer,\r\n  _In_&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;DWORD &Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;nNumberOfBytesToRead,\r\n  _Out_opt_&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;LPDWORD &Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;&Acirc;&nbsp;lpNumberOfBytesRead,\r\n  _Inout_opt_&Acirc;&nbsp;LPOVERLAPPED lpOverlapped\r\n);\r\n\r\n'], 'documentation': 'EMPTY DOC', 'url': 'https://msdn.microsoft.com/en-us/library/windows/desktop/aa365467(v=vs.85).aspx'}, {'sourceCode': ['\r\nThis is the content to write into file\r\nThis is the content to write into file\r\n', '\r\npackage com.mkyong;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class ReadFileExample1 {\r\n\r\n\tprivate static final String FILENAME = "E:\\\\test\\\\filename.txt";\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tBufferedReader br = null;\r\n\t\tFileReader fr = null;\r\n\r\n\t\ttry {\r\n\r\n\t\t\t//br = new BufferedReader(new FileReader(FILENAME));\r\n\t\t\tfr = new FileReader(FILENAME);\r\n\t\t\tbr = new BufferedReader(fr);\r\n\r\n\t\t\tString sCurrentLine;\r\n\r\n\t\t\twhile ((sCurrentLine = br.readLine()) != null) {\r\n\t\t\t\tSystem.out.println(sCurrentLine);\r\n\t\t\t}\r\n\r\n\t\t} catch (IOException e) {\r\n\r\n\t\t\te.printStackTrace();\r\n\r\n\t\t} finally {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tif (br != null)\r\n\t\t\t\t\tbr.close();\r\n\r\n\t\t\t\tif (fr != null)\r\n\t\t\t\t\tfr.close();\r\n\r\n\t\t\t} catch (IOException ex) {\r\n\r\n\t\t\t\tex.printStackTrace();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n', '\r\nThis is the content to write into file\r\nThis is the content to write into file\r\n', '\r\npackage com.mkyong;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class ReadFileExample2 {\r\n\r\n\tprivate static final String FILENAME = "E:\\\\test\\\\filename.txt";\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\ttry (BufferedReader br = new BufferedReader(new FileReader(FILENAME))) {\r\n\r\n\t\t\tString sCurrentLine;\r\n\r\n\t\t\twhile ((sCurrentLine = br.readLine()) != null) {\r\n\t\t\t\tSystem.out.println(sCurrentLine);\r\n\t\t\t}\r\n\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n'], 'documentation': 'EMPTY DOC', 'url': 'https://www.mkyong.com/java/how-to-read-file-from-java-bufferedreader-example/'}, {'sourceCode': ['M = dlmread(', 'M = ', 'X = magic(3);\ndlmwrite(', 'type ', '40 5 30 1.6 0.2 1.2\n15 25 35 0.6 1 1.4\n20 45 10 0.8 1.8 0.4\n  \n8 1 6\n3 5 7\n4 9 2\n', 'M = dlmread(', 'M = ', 'test max min direction\n10 27.7 12.4 12\n11 26.9 13.5 18\n12 27.4 16.9 31\n13 25.1 12.7 29  ', 'filename = ', 'M =\n\n   10.0000   27.7000   12.4000   12.0000\n   11.0000   26.9000   13.5000   18.0000\n   12.0000   27.4000   16.9000   31.0000\n   13.0000   25.1000   12.7000   29.0000', 'test max min direction\n10 27.7 12.4 12\n11 26.9 13.5 18\n12 27.4 16.9 31\n13 25.1 12.7 29  ', 'M = dlmread(', 'M =\n\n   12.0000   27.4000   16.9000   31.0000\n   13.0000   25.1000   12.7000   29.0000'], 'documentation': 'EMPTY DOC', 'url': 'https://www.mathworks.com/help/matlab/ref/dlmread.html'}, {'sourceCode': ['var ', 'func NopCloser(r ', 'func ReadAll(r ', 'Go is a general-purpose language designed with systems programming in mind.\n', 'func ReadDir(dirname ', 'func ReadFile(filename ', 'File contents: Hello, Gophers!\n', 'func TempDir(dir, prefix ', 'func TempFile(dir, prefix ', 'func WriteFile(filename '], 'documentation': 'EMPTY DOC', 'url': 'https://golang.org/pkg/io/ioutil/'}], 'requestID': request_body.get('requestID')}

    data = {'requestID': request_body.get('requestID'), 'searchResult': [
        {'url': 'http://interactivepython.org/runestone/static/pythonds/SortSearch/TheBubbleSort.html',
         'documentation': ' Figure 1 bubbleSort The First Pass Figure 2 Exchanging Two Values in Python Self Check readers online now Back to top ',
         'sourceCode': ['temp = alist[i]\nalist[i] = alist[j]\nalist[j] = temp\n']},
        {'url': 'http://www.geekviewpoint.com/python/sorting/bubblesort',
         'documentation': ' Geek Viewpoint App is Now on Android Bubble Sort In Python by Isai Damier Post a Job 199 for 30 days ',
         'sourceCode': [
             '#=======================================================================\r\n#  Author: Isai Damier\r\n#  Title: Bubblesort\r\n#  Project: geekviewpoint\r\n#  Package: algorithms\r\n#\r\n#  Statement:\r\n#  Given a disordered list of integers (or any other items),\r\n#  rearrange the integers in natural order.\r\n#\r\n#  Sample Input: [8,5,3,1,9,6,0,7,4,2,5]\r\n#  Sample Output: [0,1,2,3,4,5,5,6,7,8,9]\r\n#\r\n# Time Complexity of Solution:\r\n#  Best O(n^2); Average O(n^2); Worst O(n^2).\r\n#\r\n#  Approach:\r\n#   Bubblesort is an elementary sorting algorithm. The idea is to\r\n#   imagine bubbling the smallest elements of a (vertical) array to the\r\n#   top; then bubble the next smallest; then so on until the entire\r\n#   array is sorted. Bubble sort is worse than both insertion sort and\r\n#   selection sort. It moves elements as many times as insertion sort\r\n#   (bad) and it takes as long as selection sort (bad). On the positive\r\n#   side, bubble sort is easy to understand. Also there are highly\r\n#   improved variants of bubble sort.\r\n#\r\n#  0] For each element at index i from 0 to n, loop:\r\n#  1] For each element at index k, from n to i exclusive, loop:\r\n#  2] If the element at k is less than that at k-1, swap them.\r\n#======================================================================= \n def bubblesort( A ):\r\n  for i in range( len( A ) ):\r\n    for k in range( len( A ) - 1, i, -1 ):\r\n      if ( A[k] ',
             'import unittest\r\nfrom algorithms import sorting\r\n\r\nclass Test( unittest.TestCase ):\r\n\r\n  def testBubblesort( self ):\r\n    A = [8, 5, 3, 1, 9, 6, 0, 7, 4, 2, 5]\r\n    sorting.bubblesort( A )\r\n    for i in range( 1, len( A ) ):\r\n        if A[i - 1] > A[i]:\r\n          self.fail( "bubblesort method fails." )\r\n']},
        {
            'url': 'https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-search-and-sorting-exercise-4.php',
            'documentation': 'Online editors C Java PHP Python C Sharp are closed for maintenance and upgradation Python Data Structures and Algorithms Bubble sort Python Search and Sorting Exercise4 with Solution Improve this sample solution and post your code through Disqus ',
            'sourceCode': [
                'def bubbleSort(nlist):\r\n    for passnum in range(len(nlist)-1,0,-1):\r\n        for i in range(passnum):\r\n            if nlist[i]>nlist[i+1]:\r\n                temp = nlist[i]\r\n                nlist[i] = nlist[i+1]\r\n                nlist[i+1] = temp\r\n\r\nnlist = [14,46,43,27,57,41,45,21,70]\r\nbubbleSort(nlist)\r\nprint(nlist)\r\n\r\n',
                '[14, 21, 27, 41, 43, 45, 46, 57, 70]\r\n',
                'def bubbleSort(nlist):\r\n    for passnum in range(len(nlist)-1,0,-1):\r\n        for i in range(passnum):\r\n            if nlist[i]>nlist[i+1]:\r\n                temp = nlist[i]\r\n                nlist[i] = nlist[i+1]\r\n                nlist[i+1] = temp\r\n\r\nnlist = [14,46,43,27,57,41,45,21,70]\r\nbubbleSort(nlist)\r\nprint(nlist)']},
        {'url': 'http://www.geeksforgeeks.org/bubble-sort/',
         'documentation': ' Bubble Sort Recommended Please solve it on PRACTICE first before moving on to the solution CC Java Python Quiz on Bubble Sort Coding practice for sorting GATE CS Corner Company Wise Coding Practice Recommended Posts Tags ',
         'sourceCode': [
             '\r\n// C program for implementation of Bubble sort\r\n#include \r\n\r\nvoid swap(int *xp, int *yp)\r\n{\r\n    int temp = *xp;\r\n    *xp = *yp;\r\n    *yp = temp;\r\n}\r\n\r\n// A function to implement bubble sort\r\nvoid bubbleSort(int arr[], int n)\r\n{\r\n   int i, j;\r\n   for (i = 0; i  arr[j+1])\r\n              swap(&arr[j], &arr[j+1]);\r\n}\r\n\r\n/* Function to print an array */\r\nvoid printArray(int arr[], int size)\r\n{\r\n    int i;\r\n    for (i=0; i ',
             '\r\n// Java program for implementation of Bubble Sort\r\nclass BubbleSort\r\n{\r\n    void bubbleSort(int arr[])\r\n    {\r\n        int n = arr.length;\r\n        for (int i = 0; i  arr[j+1])\r\n                {\r\n                    // swap temp and arr[i]\r\n                    int temp = arr[j];\r\n                    arr[j] = arr[j+1];\r\n                    arr[j+1] = temp;\r\n                }\r\n    }\r\n\r\n    /* Prints the array */\r\n    void printArray(int arr[])\r\n    {\r\n        int n = arr.length;\r\n        for (int i=0; i',
             '\r\n# Python program for implementation of Bubble Sort\r\n\r\ndef bubbleSort(arr):\r\n    n = len(arr)\r\n\r\n    # Traverse through all array elements\r\n    for i in range(n):\r\n\r\n        # Last i elements are already in place\r\n        for j in range(0, n-i-1):\r\n\r\n            # traverse the array from 0 to n-i-1\r\n            # Swap if the element found is greater\r\n            # than the next element\r\n            if arr[j] > arr[j+1] :\r\n                arr[j], arr[j+1] = arr[j+1], arr[j]\r\n\r\n# Driver code to test above\r\narr = [64, 34, 25, 12, 22, 11, 90]\r\n\r\nbubbleSort(arr)\r\n\r\nprint ("Sorted array is:")\r\nfor i in range(len(arr)):\r\n    print ("%d" %arr[i]), \r\n',
             'Sorted array:\r\n11 12 22 25 34 64 90',
             '\r\n// Optimized implementation of Bubble sort\r\n#include \r\n\r\nvoid swap(int *xp, int *yp)\r\n{\r\n    int temp = *xp;\r\n    *xp = *yp;\r\n    *yp = temp;\r\n}\r\n\r\n// An optimized version of Bubble Sort\r\nvoid bubbleSort(int arr[], int n)\r\n{\r\n   int i, j;\r\n   bool swapped;\r\n   for (i = 0; i  arr[j+1])\r\n        {\r\n           swap(&arr[j], &arr[j+1]);\r\n           swapped = true;\r\n        }\r\n     }\r\n\r\n     // IF no two elements were swapped by inner loop, then break\r\n     if (swapped == false)\r\n        break;\r\n   }\r\n}\r\n\r\n/* Function to print an array */\r\nvoid printArray(int arr[], int size)\r\n{\r\n    int i;\r\n    for (i=0; i ',
             'Sorted array:\r\n11 12 22 25 34 64 90']},
        {'url': 'https://stackoverflow.com/questions/895371/bubble-sort-homework',
         'documentation': ' current community your communities more stack exchange communities Learn Share Build Each month over 50 million developers come to Stack Overflow to learn share their knowledge and build their careers Join the worldacirc128153s largest developer community Bubble Sort Homework KM Should he get of your lawn The post is essentially I have trouble coding this is what I did it doesnt work Theres obviously an implicit Can someone give me some pointers please Unlike many homework questions this one a is well written b is upfront about being homework and c includes a good attempt at solving the problem I dont think the lack of an actual question mark detracts too greatly Bubble sort is used as a learning tool because its the easiest sort algorithm for most people to understand Its a good entry point for learning about sorting and algorithms in general If we only taught stuff that people would actually use the discussion of sorting would start and end with use the library sort routine This question is a posterchild for how to ask a good homework questions To John Fouhys point there is a code sample its well written and the poster is trying hard to make it easy for us to help Well done joshhunt Bubble sort is not an easy sort algorithm for people to understand From both my own experience and experience teaching I can confidently say that insertion sort selection sort minsort minimum element sort even for some students mergesort and quicksort are easier to understand acirc128148 after all they correspond to somewhat natural ways of sorting a list but bubble sort is just artificial Further bubble sort is prone to many offbyone errors and infinite loop errors like this question here As Knuth says the bubble sort seems to have nothing to recommend it except a catchy name 15 Answers 15 Just on that last bit of code bubble doesnt return anything so the end result is that None is printed You probably either want to return the list or do bubble mylist and then print mylist 1 well structured clear advice Great to see you walk the reader through what you did and why rather than just write a quick fix Im a C programmer so this might just be because I dont get Python but dont you need something in the while loop to subtract 1 from length to get a normal bubble sort algorithm This is a naive but not incorrect implementation of Bubble Sort After each iteration of the while loop the largest element bubbles up to the end of the list As such after one iteration the last element is definitely in the right place and will not be moved by successive iterations By subtracting 1 from length you are optimizing the algorithm by only sorting the sublist that is not yet sorted the lengthn frontmost elements of the list I elected to skip this optimization as it is more an optimization than a vital part of the algorithm Put it all together and you get this wellyou missed this one The range command can also take just one argument named stop 1 Was typing something to the same effect Its a bit too bad theres not a WRONG button I can hit for this answer I think this question and the responses and especially the voting need to be featured the next time Joel Spolsky talks about how well hes tuned the social interactions on stackoverflow You guys are right I answered prematurely on this one Sorry about that Martin and I should point out that Im more surprisedshocked by the voting than the answer The reputation system encourages you to get that first answer in right away The broken part is how an incorrect answer is voted up I suspect that most people vote without really understanding the question in the first place just like the way I answered the question OTOH the person who asks the question has the privilege of choosing the right answer afterwards I do beleive the question was more along the lines of How can this code be fixed not what is your bubble sort you are absolutely right but doing it in right way is more important True perhaps mtasic but anything tagged as homework is most instructively tweaked rather than rewritten especially when its tagged as homework by the OP This is a perfect rewrite of the text book C bubble sort most people study I wrote the same adding good information is helpful in my view so good answer thought you might use flag to break earliest possible Its a little less belabored with the way that you can swap values in Python arra arrb arrb arra Makoto good point fixed Shouldnt the unsorted False be outside the for loop It had a few more problems than that Bubble larger element all the way to the end And decrement the end counter n so that you will not have to compare it again Continue with the while loop as long as there are exchanges Worst Case O N2 Best Case O N Please indent your code sample correctly this is of course especially important in Python You might also want to explain why your solution is worth considering considering there is also an answer with 100 votes You can speed up a bubblesort by skipping the portion of your list that you know is already sorted because of previous iterations See en wikipedia orgwikiBubblesortAlternativeimplementationzwnj8203s again all you really need to do is use a boolean call it untouched declare it outside your loop loop until untouched true within your while loop set untouched to be true in the body of your if set untouched to be false Doing this you can ditch your else case in this way if you ever switch two elements your loop will continue if you dont the loop will not Your Answer Sign up or log in Post as a guest Post as a guest By posting your answer you agree to the privacy policy and terms of service Not the answer youre looking for Browse other questions tagged python algorithm sorting bubblesort or ask your own question asked viewed 77332 times active Linked Related Hot Network Questions Stack Overflow Stack Overflow Business Company Stack Exchange Network ',
         'sourceCode': [
             'mylist = [12, 5, 13, 8, 9, 65]\ndef bubble(badList):\n    length = len(badList) - 1\n    unsorted = True\n    while unsorted:\n        for element in range(0,length):\n            unsorted = False\n            if badList[element] > badList[element + 1]:\n                hold = badList[element + 1]\n                badList[element + 1] = badList[element]\n                badList[element] = hold\n                print badList\n            else:\n                unsorted = True\nprint bubble(mylist)\n',
             "sorted = False  # We haven't started sorting yet\nwhile not sorted:\n    sorted = True  # Assume the list is now sorted\n    for element in range(0, length):\n        if badList[element] > badList[element + 1]:\n            sorted = False  # We found two elements in the wrong order\n            hold = badList[element + 1]\n            badList[element + 1] = badList[element]\n            badList[element] = hold\n    # We went through the whole list. At this point, if there were no elements\n    # in the wrong order, sorted is still True. Otherwise, it's false, and the\n    # while loop executes again.\n",
             'for i in range(0, length):\n', 'for i in range(length):\n', 'def bubble(bad_list):\n',
             'bad_list[i], bad_list[i+1] = bad_list[i+1], bad_list[i]\n',
             'my_list = [12, 5, 13, 8, 9, 65]\ndef bubble(bad_list):\n    length = len(bad_list) - 1\n    sorted = False\n    while not sorted:\n        sorted = True\n        for i in range(length):\n            if bad_list[i] > bad_list[i+1]:\n                sorted = False\n                bad_list[i], bad_list[i+1] = bad_list[i+1], bad_list[i]\nbubble(my_list)\nprint my_list\n',
             'def bubble(badList):\n    length = len(badList)\n    for i in range(0,length):\n        swapped = False\n        for element in range(0, length-i-1):\n            if badList[element] > badList[element + 1]:\n                hold = badList[element + 1]\n                badList[element + 1] = badList[element]\n                badList[element] = hold\n                swapped = True\n        if not swapped: break\n    return badList\n',
             'def bubble(badList):\n    length = len(badList) - 1\n    unsorted = True\n    while unsorted:\n        unsorted = False\n        for element in range(0,length):\n            #unsorted = False\n            if badList[element] > badList[element + 1]:\n                 hold = badList[element + 1]\n                 badList[element + 1] = badList[element]\n                 badList[element] = hold\n                 unsorted = True\n                 #print badList\n             #else:\n                 #unsorted = True\n     return badList\n',
             'sorted = False\nwhile not sorted:\n    ...\n',
             'def bubble(values):\n    length = len(values) - 1\n    sorted = False\n    while not sorted:\n        sorted = True\n        for element in range(0,length):\n            if values[element] > values[element + 1]:\n                 hold = values[element + 1]\n                 values[element + 1] = values[element]\n                 values[element] = hold\n                 sorted = False\n    return values\n',
             'def bubble_sort(l):\n    for passes_left in range(len(l)-1, 0, -1):\n        for index in range(passes_left):\n            if l[index] ',
             'def bubble(arr):\n    l = len(arr)        \n    for a in range(l):\n        for b in range(l-1):\n            if (arr[a] ',
             'mylist = [12, 5, 13, 8, 9, 65]\ndef bubble(badList):\n    length = len(badList) - 2\n    unsorted = True\n    while unsorted:\n        for element in range(0,length):\n            unsorted = False\n            if badList[element] > badList[element + 1]:\n                hold = badList[element + 1]\n                badList[element + 1] = badList[element]\n                badList[element] = hold\n                print badList\n                unsorted = True\n    return badList\nprint bubble(mylist)\n',
             'def bubble2(badList):\n    swapped = True\n    length = len(badList) - 2\n    while swapped:\n        swapped = False\n        for i in range(0, length):\n            if badList[i] > badList[i + 1]:\n                # swap\n                hold = badList[i + 1]\n                badList[i + 1] = badList[i]\n                badList[i] = hold\n                swapped = True\n    return badList\n',
             'mylist = [9, 8, 5, 4, 12, 1, 7, 5, 2]\nprint mylist\ndef bubble(badList):\n    length = len(badList) - 1\n    element = 0\n    while element  badList[element + 1]:\n            hold = badList[element + 1]\n            badList[element + 1] = badList[element]\n            badList[element] = hold\n            element = 0\n            print badList\n        else:\n            element = element + 1\nprint bubble(mylist)\n',
             "def bubble_sort(l):\n    exchanged = True\n    iteration = 0\n    n = len(l)\n    while(exchanged):\n        iteration += 1\n        exchanged = False\n        # Move the largest element to the end of the list\n        for i in range(n-1):\n            if l[i] > l[i+1]:\n                exchanged = True\n                l[i], l[i+1] = l[i+1], l[i]\n        n -= 1   # Largest element already towards the end\n    print 'Iterations: %s' %(iteration)\n    return l\n",
             'def bubbleSort(alist):\nif len(alist)  alist[j]:\n         alist[i],alist[j] = alist[j],alist[i]\nreturn alist\n',
             'def bubble_sort(a):\n    t = 0\n    sorted = False # sorted = False because we have not began to sort\n    while not sorted:\n    sorted = True # Assume sorted = True first, it will switch only there is any change\n        for key in range(1,len(a)):\n            if a[key-1] > a[key]:\n                sorted = False\n                t = a[key-1]; a[key-1] = a[key]; a[key] = t;\n    print a\n',
             'a = len(alist)-1\nwhile a > 0:\n    for b in range(0,a):\n        #compare with the adjacent element\n        if alist[b]>=alist[b+1]:\n            #swap both elements\n            alist[b], alist[b+1] = alist[b+1], alist[b]\n    a-=1\n',
             'lista1 = [12, 5, 13, 8, 9, 65]\ni=0\nwhile i  lista1[i+1]:\n        x = lista1[i]\n        lista1[i] = lista1[i+1]\n        lista1[i+1] = x\n        i=0\n        continue\n    else:\n        i+=1\nprint(lista1)\n',
             'def bubble_sort(li):\n    l = len(li)\n    tmp = None\n    sorted_l = sorted(li)\n    while (li != sorted_l):\n        for ele in range(0,l-1):\n            if li[ele] > li[ele+1]:\n                tmp = li[ele+1]\n                li[ele+1] = li [ele]\n                li[ele] = tmp\n    return li\n',
             "def bubble(badList):\n    length = len(badList) - 1\n    n = 0\n    while n  badList[element + 1]:\n                hold = badList[element + 1]\n                badList[element + 1] = badList[element]\n                badList[element] = hold\n                n = 0\n            else:\n                n += 1\n    return badList\nif __name__ == '__main__':\n    mylist = [90, 10, 2, 76, 17, 66, 57, 23, 57, 99]\n    print bubble(mylist)\n"]},
        {'url': 'http://knowpapa.com/bs-py/',
         'documentation': ' Knowpapa com a developers blog Bubble Sort Algorithm in Python Possibly Related KNOWPAPA com Mobile and Web Apps Tarot Tanpura Piano Karaoke Maker My Tkinter Book',
         'sourceCode': [
             ' \r\n\r\ndef bubble_sort(lst): \r\n    nums = list(lst)\r\n    for i in range(len(lst)):\r\n        for j in range(i+1, len(lst)):\r\n            if lst[j] ']},
        {'url': 'http://www.koderdojo.com/blog/bubble-sort-in-python-and-hackerrank-30-days-of-code',
         'documentation': ' Bubble Sort in Python and HackerRank 30 Days of Code Bubble Sort in Python Keeping Track of Swaps in Bubble Sort Limiting the Number of Subsequent Passes in the List HackerRank 30 Days of Code Challenge Bubble Sort in C Comb Sort Cocktail Sort Posted by Koder Dojo Related Posts Quicksort Algorithm in Python Insertion Sort Using Python Python Training Selection Sort with Sample Unit Tests Merge Sort in Python Using Pythonista 3 on iPad Pro Comb Sort Improves Bubble Sort by Eliminating Turtles Cocktail Sort',
         'sourceCode': [
             "def bubble_sort(lst):\r\n    num_swaps = 0\r\n\r\n    if len(lst)  lst[j + 1]:\r\n                lst[j], lst[j+1] = lst[j+1], lst[j]\r\n                num_swaps += 1\r\n\r\n    return num_swaps\r\n\r\na = list(range(3, 0, -1))\r\nswaps = bubble_sort(a)\r\n\r\nprint('Array is sorted in {0} swaps.'.format(swaps))\r\nprint('First Element: {0}'.format(a[0]))\r\nprint('Last Element: {0}'.format(a[-1]))\r\n",
             'for i in range(len(lst) - 1, 0, -1):\r\n    for j in range(i):',
             'using System;\r\n\r\n\r\npublic int BubbleSort(int[] lst) {\r\n    var numSwaps = 0;\r\n    \r\n    if (lst.Length  0; i--)\r\n    for (int j = 0; j  lst[j+1]) {\r\n            var temp = lst[j+1];\r\n            lst[j+1] = lst[j];\r\n            lst[j] = temp;\r\n            numSwaps++;\r\n        }\r\n    }\r\n    \r\n    return numSwaps;\r\n}\r\n\r\nvar lst = new [] {3, 2, 1};\r\nvar swaps = BubbleSort(lst);\r\n\r\nConsole.WriteLine("sorted list = {0}", string.Join(",", lst));\r\nConsole.WriteLine($"swaps = {swaps}");']},
        {'url': 'https://pythonschool.net/data-structures-algorithms/bubble-sort/',
         'documentation': ' PythonSchool Python School Bubble Sort Implementing a bubble sort in Python Exercises',
         'sourceCode': ['1', '12, 5, 7, 18, 11, 6, 12, 4, 17, 1\n',
                        ' 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13',
                        'Repeat\n    X  StartofArray\n    Flag  False\n    Repeat\n        If Number(X) > Number (X+ 1) Then\n            Temp  Number(X)\n            Number (X)  Number (X+ 1)\n            Number(X+I)  Temp\n            Flag  True\n        End If\n        X  X+1\n    Until EndofArray\nUntil Flag = False\n']}]}

    headers = {'Content-Type': 'application/json'}

    requests.post(url=url, data=json.dumps(data), headers=headers)

    return json.dumps({'success': True})


@app.route('/run_get')
def run_get():
    url = 'http://0.0.0.0:10443/code-recommendations'
    data = {
        'query': 'read file',
        'libs': ['flask', 'request', 'json'],
        'comments': ['122', 'todo: test'],
        'language': 'Python',
        'sites': ['stackoverflow'],
    }

    requests.request(url=url, method='GET', data=data)

    return 'get'


if __name__ == "__main__":
    app.run(host='0.0.0.0', port=1111)
